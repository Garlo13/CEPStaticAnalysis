/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.esper.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.esper.EsperPackage;
import org.xtext.example.mydsl.esper.JoinFollowBy;
import org.xtext.example.mydsl.esper.Pattern;
import org.xtext.example.mydsl.esper.Win;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pattern</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.esper.impl.PatternImpl#getJoinFollowBy <em>Join Follow By</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper.impl.PatternImpl#getWin <em>Win</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PatternImpl extends MinimalEObjectImpl.Container implements Pattern
{
  /**
   * The cached value of the '{@link #getJoinFollowBy() <em>Join Follow By</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoinFollowBy()
   * @generated
   * @ordered
   */
  protected JoinFollowBy joinFollowBy;

  /**
   * The cached value of the '{@link #getWin() <em>Win</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWin()
   * @generated
   * @ordered
   */
  protected Win win;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PatternImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EsperPackage.Literals.PATTERN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JoinFollowBy getJoinFollowBy()
  {
    return joinFollowBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJoinFollowBy(JoinFollowBy newJoinFollowBy, NotificationChain msgs)
  {
    JoinFollowBy oldJoinFollowBy = joinFollowBy;
    joinFollowBy = newJoinFollowBy;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EsperPackage.PATTERN__JOIN_FOLLOW_BY, oldJoinFollowBy, newJoinFollowBy);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJoinFollowBy(JoinFollowBy newJoinFollowBy)
  {
    if (newJoinFollowBy != joinFollowBy)
    {
      NotificationChain msgs = null;
      if (joinFollowBy != null)
        msgs = ((InternalEObject)joinFollowBy).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EsperPackage.PATTERN__JOIN_FOLLOW_BY, null, msgs);
      if (newJoinFollowBy != null)
        msgs = ((InternalEObject)newJoinFollowBy).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EsperPackage.PATTERN__JOIN_FOLLOW_BY, null, msgs);
      msgs = basicSetJoinFollowBy(newJoinFollowBy, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EsperPackage.PATTERN__JOIN_FOLLOW_BY, newJoinFollowBy, newJoinFollowBy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Win getWin()
  {
    return win;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWin(Win newWin, NotificationChain msgs)
  {
    Win oldWin = win;
    win = newWin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EsperPackage.PATTERN__WIN, oldWin, newWin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWin(Win newWin)
  {
    if (newWin != win)
    {
      NotificationChain msgs = null;
      if (win != null)
        msgs = ((InternalEObject)win).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EsperPackage.PATTERN__WIN, null, msgs);
      if (newWin != null)
        msgs = ((InternalEObject)newWin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EsperPackage.PATTERN__WIN, null, msgs);
      msgs = basicSetWin(newWin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EsperPackage.PATTERN__WIN, newWin, newWin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EsperPackage.PATTERN__JOIN_FOLLOW_BY:
        return basicSetJoinFollowBy(null, msgs);
      case EsperPackage.PATTERN__WIN:
        return basicSetWin(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EsperPackage.PATTERN__JOIN_FOLLOW_BY:
        return getJoinFollowBy();
      case EsperPackage.PATTERN__WIN:
        return getWin();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EsperPackage.PATTERN__JOIN_FOLLOW_BY:
        setJoinFollowBy((JoinFollowBy)newValue);
        return;
      case EsperPackage.PATTERN__WIN:
        setWin((Win)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EsperPackage.PATTERN__JOIN_FOLLOW_BY:
        setJoinFollowBy((JoinFollowBy)null);
        return;
      case EsperPackage.PATTERN__WIN:
        setWin((Win)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EsperPackage.PATTERN__JOIN_FOLLOW_BY:
        return joinFollowBy != null;
      case EsperPackage.PATTERN__WIN:
        return win != null;
    }
    return super.eIsSet(featureID);
  }

} //PatternImpl
