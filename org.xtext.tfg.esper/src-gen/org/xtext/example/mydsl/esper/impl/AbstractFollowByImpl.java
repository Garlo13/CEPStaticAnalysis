/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.esper.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.esper.AbstractFollowBy;
import org.xtext.example.mydsl.esper.EsperPackage;
import org.xtext.example.mydsl.esper.FollowBy;
import org.xtext.example.mydsl.esper.FollowByWhere;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Abstract Follow By</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.esper.impl.AbstractFollowByImpl#getFollowBy <em>Follow By</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.esper.impl.AbstractFollowByImpl#getWherePart <em>Where Part</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AbstractFollowByImpl extends MinimalEObjectImpl.Container implements AbstractFollowBy
{
  /**
   * The cached value of the '{@link #getFollowBy() <em>Follow By</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFollowBy()
   * @generated
   * @ordered
   */
  protected FollowBy followBy;

  /**
   * The cached value of the '{@link #getWherePart() <em>Where Part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWherePart()
   * @generated
   * @ordered
   */
  protected FollowByWhere wherePart;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AbstractFollowByImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EsperPackage.Literals.ABSTRACT_FOLLOW_BY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FollowBy getFollowBy()
  {
    return followBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFollowBy(FollowBy newFollowBy, NotificationChain msgs)
  {
    FollowBy oldFollowBy = followBy;
    followBy = newFollowBy;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY, oldFollowBy, newFollowBy);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFollowBy(FollowBy newFollowBy)
  {
    if (newFollowBy != followBy)
    {
      NotificationChain msgs = null;
      if (followBy != null)
        msgs = ((InternalEObject)followBy).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY, null, msgs);
      if (newFollowBy != null)
        msgs = ((InternalEObject)newFollowBy).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY, null, msgs);
      msgs = basicSetFollowBy(newFollowBy, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY, newFollowBy, newFollowBy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FollowByWhere getWherePart()
  {
    return wherePart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWherePart(FollowByWhere newWherePart, NotificationChain msgs)
  {
    FollowByWhere oldWherePart = wherePart;
    wherePart = newWherePart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART, oldWherePart, newWherePart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWherePart(FollowByWhere newWherePart)
  {
    if (newWherePart != wherePart)
    {
      NotificationChain msgs = null;
      if (wherePart != null)
        msgs = ((InternalEObject)wherePart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART, null, msgs);
      if (newWherePart != null)
        msgs = ((InternalEObject)newWherePart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART, null, msgs);
      msgs = basicSetWherePart(newWherePart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART, newWherePart, newWherePart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY:
        return basicSetFollowBy(null, msgs);
      case EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART:
        return basicSetWherePart(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY:
        return getFollowBy();
      case EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART:
        return getWherePart();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY:
        setFollowBy((FollowBy)newValue);
        return;
      case EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART:
        setWherePart((FollowByWhere)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY:
        setFollowBy((FollowBy)null);
        return;
      case EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART:
        setWherePart((FollowByWhere)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EsperPackage.ABSTRACT_FOLLOW_BY__FOLLOW_BY:
        return followBy != null;
      case EsperPackage.ABSTRACT_FOLLOW_BY__WHERE_PART:
        return wherePart != null;
    }
    return super.eIsSet(featureID);
  }

} //AbstractFollowByImpl
