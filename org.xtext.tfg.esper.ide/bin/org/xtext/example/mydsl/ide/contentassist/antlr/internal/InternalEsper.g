/*
 * generated by Xtext 2.13.0
 */
grammar InternalEsper;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.EsperGrammarAccess;

}
@parser::members {
	private EsperGrammarAccess grammarAccess;

	public void setGrammarAccess(EsperGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainmodelAccess().getAlternatives()); }
		(rule__Domainmodel__Alternatives)*
		{ after(grammarAccess.getDomainmodelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getGroup()); }
		(rule__Event__Group__0)
		{ after(grammarAccess.getEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributes
entryRuleAttributes
:
{ before(grammarAccess.getAttributesRule()); }
	 ruleAttributes
{ after(grammarAccess.getAttributesRule()); } 
	 EOF 
;

// Rule Attributes
ruleAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributesAccess().getGroup()); }
		(rule__Attributes__Group__0)
		{ after(grammarAccess.getAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributesDefinition
entryRuleAttributesDefinition
:
{ before(grammarAccess.getAttributesDefinitionRule()); }
	 ruleAttributesDefinition
{ after(grammarAccess.getAttributesDefinitionRule()); } 
	 EOF 
;

// Rule AttributesDefinition
ruleAttributesDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributesDefinitionAccess().getGroup()); }
		(rule__AttributesDefinition__Group__0)
		{ after(grammarAccess.getAttributesDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleParts
entryRuleRuleParts
:
{ before(grammarAccess.getRulePartsRule()); }
	 ruleRuleParts
{ after(grammarAccess.getRulePartsRule()); } 
	 EOF 
;

// Rule RuleParts
ruleRuleParts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRulePartsAccess().getGroup()); }
		(rule__RuleParts__Group__0)
		{ after(grammarAccess.getRulePartsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getGroup()); }
		(rule__Name__Group__0)
		{ after(grammarAccess.getNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePriority
entryRulePriority
:
{ before(grammarAccess.getPriorityRule()); }
	 rulePriority
{ after(grammarAccess.getPriorityRule()); } 
	 EOF 
;

// Rule Priority
rulePriority 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPriorityAccess().getGroup()); }
		(rule__Priority__Group__0)
		{ after(grammarAccess.getPriorityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getAlternatives()); }
		(rule__Select__Alternatives)
		{ after(grammarAccess.getSelectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKindSelectAttributesDefinition
entryRuleKindSelectAttributesDefinition
:
{ before(grammarAccess.getKindSelectAttributesDefinitionRule()); }
	 ruleKindSelectAttributesDefinition
{ after(grammarAccess.getKindSelectAttributesDefinitionRule()); } 
	 EOF 
;

// Rule KindSelectAttributesDefinition
ruleKindSelectAttributesDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getAlternatives()); }
		(rule__KindSelectAttributesDefinition__Alternatives)
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectAttributesDefinition
entryRuleSelectAttributesDefinition
:
{ before(grammarAccess.getSelectAttributesDefinitionRule()); }
	 ruleSelectAttributesDefinition
{ after(grammarAccess.getSelectAttributesDefinitionRule()); } 
	 EOF 
;

// Rule SelectAttributesDefinition
ruleSelectAttributesDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAttributesDefinitionAccess().getGroup()); }
		(rule__SelectAttributesDefinition__Group__0)
		{ after(grammarAccess.getSelectAttributesDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleSelectDefinition
entryRuleSingleSelectDefinition
:
{ before(grammarAccess.getSingleSelectDefinitionRule()); }
	 ruleSingleSelectDefinition
{ after(grammarAccess.getSingleSelectDefinitionRule()); } 
	 EOF 
;

// Rule SingleSelectDefinition
ruleSingleSelectDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleSelectDefinitionAccess().getGroup()); }
		(rule__SingleSelectDefinition__Group__0)
		{ after(grammarAccess.getSingleSelectDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFrom
entryRuleFrom
:
{ before(grammarAccess.getFromRule()); }
	 ruleFrom
{ after(grammarAccess.getFromRule()); } 
	 EOF 
;

// Rule From
ruleFrom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromAccess().getGroup()); }
		(rule__From__Group__0)
		{ after(grammarAccess.getFromAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinFollowBy
entryRuleJoinFollowBy
:
{ before(grammarAccess.getJoinFollowByRule()); }
	 ruleJoinFollowBy
{ after(grammarAccess.getJoinFollowByRule()); } 
	 EOF 
;

// Rule JoinFollowBy
ruleJoinFollowBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinFollowByAccess().getGroup()); }
		(rule__JoinFollowBy__Group__0)
		{ after(grammarAccess.getJoinFollowByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractFollowBy
entryRuleAbstractFollowBy
:
{ before(grammarAccess.getAbstractFollowByRule()); }
	 ruleAbstractFollowBy
{ after(grammarAccess.getAbstractFollowByRule()); } 
	 EOF 
;

// Rule AbstractFollowBy
ruleAbstractFollowBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractFollowByAccess().getGroup()); }
		(rule__AbstractFollowBy__Group__0)
		{ after(grammarAccess.getAbstractFollowByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFollowBy
entryRuleFollowBy
:
{ before(grammarAccess.getFollowByRule()); }
	 ruleFollowBy
{ after(grammarAccess.getFollowByRule()); } 
	 EOF 
;

// Rule FollowBy
ruleFollowBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFollowByAccess().getGroup()); }
		(rule__FollowBy__Group__0)
		{ after(grammarAccess.getFollowByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
		(rule__TerminalExpression__Alternatives)
		{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleDefinition
entryRuleSingleDefinition
:
{ before(grammarAccess.getSingleDefinitionRule()); }
	 ruleSingleDefinition
{ after(grammarAccess.getSingleDefinitionRule()); } 
	 EOF 
;

// Rule SingleDefinition
ruleSingleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleDefinitionAccess().getGroup()); }
		(rule__SingleDefinition__Group__0)
		{ after(grammarAccess.getSingleDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWin
entryRuleWin
:
{ before(grammarAccess.getWinRule()); }
	 ruleWin
{ after(grammarAccess.getWinRule()); } 
	 EOF 
;

// Rule Win
ruleWin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWinAccess().getGroup()); }
		(rule__Win__Group__0)
		{ after(grammarAccess.getWinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFollowByWhere
entryRuleFollowByWhere
:
{ before(grammarAccess.getFollowByWhereRule()); }
	 ruleFollowByWhere
{ after(grammarAccess.getFollowByWhereRule()); } 
	 EOF 
;

// Rule FollowByWhere
ruleFollowByWhere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFollowByWhereAccess().getAlternatives()); }
		(rule__FollowByWhere__Alternatives)
		{ after(grammarAccess.getFollowByWhereAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimer
entryRuleTimer
:
{ before(grammarAccess.getTimerRule()); }
	 ruleTimer
{ after(grammarAccess.getTimerRule()); } 
	 EOF 
;

// Rule Timer
ruleTimer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimerAccess().getGroup()); }
		(rule__Timer__Group__0)
		{ after(grammarAccess.getTimerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroupBy
entryRuleGroupBy
:
{ before(grammarAccess.getGroupByRule()); }
	 ruleGroupBy
{ after(grammarAccess.getGroupByRule()); } 
	 EOF 
;

// Rule GroupBy
ruleGroupBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupByAccess().getGroup()); }
		(rule__GroupBy__Group__0)
		{ after(grammarAccess.getGroupByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHaving
entryRuleHaving
:
{ before(grammarAccess.getHavingRule()); }
	 ruleHaving
{ after(grammarAccess.getHavingRule()); } 
	 EOF 
;

// Rule Having
ruleHaving 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHavingAccess().getGroup()); }
		(rule__Having__Group__0)
		{ after(grammarAccess.getHavingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefaultMethods
entryRuleDefaultMethods
:
{ before(grammarAccess.getDefaultMethodsRule()); }
	 ruleDefaultMethods
{ after(grammarAccess.getDefaultMethodsRule()); } 
	 EOF 
;

// Rule DefaultMethods
ruleDefaultMethods 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultMethodsAccess().getGroup()); }
		(rule__DefaultMethods__Group__0)
		{ after(grammarAccess.getDefaultMethodsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidID
entryRuleValidID
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidIDAccess().getAlternatives()); }
		(rule__ValidID__Alternatives)
		{ after(grammarAccess.getValidIDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameMethod
entryRuleNameMethod
:
{ before(grammarAccess.getNameMethodRule()); }
	 ruleNameMethod
{ after(grammarAccess.getNameMethodRule()); } 
	 EOF 
;

// Rule NameMethod
ruleNameMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameMethodAccess().getAlternatives()); }
		(rule__NameMethod__Alternatives)
		{ after(grammarAccess.getNameMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnything
entryRuleAnything
:
{ before(grammarAccess.getAnythingRule()); }
	 ruleAnything
{ after(grammarAccess.getAnythingRule()); } 
	 EOF 
;

// Rule Anything
ruleAnything 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnythingAccess().getGroup()); }
		(rule__Anything__Group__0)
		{ after(grammarAccess.getAnythingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtraParenthesisRule
entryRuleExtraParenthesisRule
:
{ before(grammarAccess.getExtraParenthesisRuleRule()); }
	 ruleExtraParenthesisRule
{ after(grammarAccess.getExtraParenthesisRuleRule()); } 
	 EOF 
;

// Rule ExtraParenthesisRule
ruleExtraParenthesisRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtraParenthesisRuleAccess().getGroup()); }
		(rule__ExtraParenthesisRule__Group__0)
		{ after(grammarAccess.getExtraParenthesisRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Operators
ruleOperators
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorsAccess().getAlternatives()); }
		(rule__Operators__Alternatives)
		{ after(grammarAccess.getOperatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getRulesAssignment_0()); }
		(rule__Domainmodel__RulesAssignment_0)
		{ after(grammarAccess.getDomainmodelAccess().getRulesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainmodelAccess().getEventsAssignment_1()); }
		(rule__Domainmodel__EventsAssignment_1)
		{ after(grammarAccess.getDomainmodelAccess().getEventsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getGroup_0()); }
		(rule__Select__Group_0__0)
		{ after(grammarAccess.getSelectAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectAccess().getAsteriskAssignment_1()); }
		(rule__Select__AsteriskAssignment_1)
		{ after(grammarAccess.getSelectAccess().getAsteriskAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KindSelectAttributesDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getSingleSelectDefinitionAssignment_0()); }
		(rule__KindSelectAttributesDefinition__SingleSelectDefinitionAssignment_0)
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getSingleSelectDefinitionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getDefaultMethodAssignment_1()); }
		(rule__KindSelectAttributesDefinition__DefaultMethodAssignment_1)
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getDefaultMethodAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getIntAssignment_2()); }
		(rule__KindSelectAttributesDefinition__IntAssignment_2)
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getIntAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getStringAssignment_3()); }
		(rule__KindSelectAttributesDefinition__StringAssignment_3)
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getStringAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSelectDefinitionAccess().getAttributeAssignment_2_0()); }
		(rule__SingleSelectDefinition__AttributeAssignment_2_0)
		{ after(grammarAccess.getSingleSelectDefinitionAccess().getAttributeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleSelectDefinitionAccess().getAsteriskKeyword_2_1()); }
		'*'
		{ after(grammarAccess.getSingleSelectDefinitionAccess().getAsteriskKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getGroup_1_0()); }
		(rule__From__Group_1_0__0)
		{ after(grammarAccess.getFromAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFromAccess().getPatternAssignment_1_1()); }
		(rule__From__PatternAssignment_1_1)
		{ after(grammarAccess.getFromAccess().getPatternAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getGroup_1_0_1_0()); }
		(rule__From__Group_1_0_1_0__0)
		{ after(grammarAccess.getFromAccess().getGroup_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFromAccess().getGroup_1_0_1_1()); }
		(rule__From__Group_1_0_1_1__0)
		{ after(grammarAccess.getFromAccess().getGroup_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFollowByAccess().getFollowByAssignment_0_0()); }
		(rule__AbstractFollowBy__FollowByAssignment_0_0)
		{ after(grammarAccess.getAbstractFollowByAccess().getFollowByAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFollowByAccess().getGroup_0_1()); }
		(rule__AbstractFollowBy__Group_0_1__0)
		{ after(grammarAccess.getAbstractFollowByAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
		(rule__TerminalExpression__Group_0__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
		(rule__TerminalExpression__Group_1__0)
		{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getSingleDefinitionAssignment_2()); }
		(rule__TerminalExpression__SingleDefinitionAssignment_2)
		{ after(grammarAccess.getTerminalExpressionAccess().getSingleDefinitionAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFollowByWhereAccess().getGroup_0()); }
		(rule__FollowByWhere__Group_0__0)
		{ after(grammarAccess.getFollowByWhereAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFollowByWhereAccess().getGroup_1()); }
		(rule__FollowByWhere__Group_1__0)
		{ after(grammarAccess.getFollowByWhereAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidID__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidIDAccess().getNameMethodParserRuleCall_1()); }
		ruleNameMethod
		{ after(grammarAccess.getValidIDAccess().getNameMethodParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameMethod__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameMethodAccess().getAvgKeyword_0()); }
		'avg'
		{ after(grammarAccess.getNameMethodAccess().getAvgKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameMethodAccess().getCurrent_timestampKeyword_1()); }
		'current_timestamp'
		{ after(grammarAccess.getNameMethodAccess().getCurrent_timestampKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getNameMethodAccess().getCountKeyword_2()); }
		'count'
		{ after(grammarAccess.getNameMethodAccess().getCountKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getNameMethodAccess().getMaxKeyword_3()); }
		'max'
		{ after(grammarAccess.getNameMethodAccess().getMaxKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getNameMethodAccess().getWithinKeyword_4()); }
		'within'
		{ after(grammarAccess.getNameMethodAccess().getWithinKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getNameMethodAccess().getTime_batchKeyword_5()); }
		'time_batch'
		{ after(grammarAccess.getNameMethodAccess().getTime_batchKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getNameMethodAccess().getTimeKeyword_6()); }
		'time'
		{ after(grammarAccess.getNameMethodAccess().getTimeKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnythingAccess().getIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAnythingAccess().getIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getINTTerminalRuleCall_1_0_1()); }
		RULE_INT
		{ after(grammarAccess.getAnythingAccess().getINTTerminalRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getSTRINGTerminalRuleCall_1_0_2()); }
		RULE_STRING
		{ after(grammarAccess.getAnythingAccess().getSTRINGTerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getFullStopKeyword_1_0_3()); }
		'.'
		{ after(grammarAccess.getAnythingAccess().getFullStopKeyword_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getOperatorAssignment_1_0_4()); }
		(rule__Anything__OperatorAssignment_1_0_4)
		{ after(grammarAccess.getAnythingAccess().getOperatorAssignment_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getExtraParenthesisAssignment_1_0_5()); }
		(rule__Anything__ExtraParenthesisAssignment_1_0_5)
		{ after(grammarAccess.getAnythingAccess().getExtraParenthesisAssignment_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getWhereKeyword_1_0_6()); }
		'where'
		{ after(grammarAccess.getAnythingAccess().getWhereKeyword_1_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getAnythingAccess().getANY_OTHERTerminalRuleCall_1_0_7()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getAnythingAccess().getANY_OTHERTerminalRuleCall_1_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorsAccess().getEqualEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getOperatorsAccess().getEqualEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getLessThanEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getOperatorsAccess().getLessThanEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getMoreThanEnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getOperatorsAccess().getMoreThanEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getLessEqualThanEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getOperatorsAccess().getLessEqualThanEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getMoreEqualThanEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getOperatorsAccess().getMoreEqualThanEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getAndEnumLiteralDeclaration_5()); }
		('and')
		{ after(grammarAccess.getOperatorsAccess().getAndEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getOrEnumLiteralDeclaration_6()); }
		('or')
		{ after(grammarAccess.getOperatorsAccess().getOrEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getBetweenEnumLiteralDeclaration_7()); }
		('between')
		{ after(grammarAccess.getOperatorsAccess().getBetweenEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getInEnumLiteralDeclaration_8()); }
		('in')
		{ after(grammarAccess.getOperatorsAccess().getInEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getNotEnumLiteralDeclaration_9()); }
		('not')
		{ after(grammarAccess.getOperatorsAccess().getNotEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getNotInEnumLiteralDeclaration_10()); }
		('not in')
		{ after(grammarAccess.getOperatorsAccess().getNotInEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getPlusEnumLiteralDeclaration_11()); }
		('+')
		{ after(grammarAccess.getOperatorsAccess().getPlusEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getMinusEnumLiteralDeclaration_12()); }
		('-')
		{ after(grammarAccess.getOperatorsAccess().getMinusEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getMultiplicationEnumLiteralDeclaration_13()); }
		('*')
		{ after(grammarAccess.getOperatorsAccess().getMultiplicationEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorsAccess().getIsnotEnumLiteralDeclaration_14()); }
		('is not')
		{ after(grammarAccess.getOperatorsAccess().getIsnotEnumLiteralDeclaration_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getCreateKeyword_0()); }
	'create'
	{ after(grammarAccess.getEventAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getSchemaKeyword_1()); }
	'schema'
	{ after(grammarAccess.getEventAccess().getSchemaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getNameAssignment_2()); }
	(rule__Event__NameAssignment_2)
	{ after(grammarAccess.getEventAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getEventattributesAssignment_3()); }
	(rule__Event__EventattributesAssignment_3)
	{ after(grammarAccess.getEventAccess().getEventattributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getEventAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__0__Impl
	rule__Attributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAttributesAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__1__Impl
	rule__Attributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttributeAssignment_1()); }
	(rule__Attributes__AttributeAssignment_1)
	{ after(grammarAccess.getAttributesAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__2__Impl
	rule__Attributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getGroup_2()); }
	(rule__Attributes__Group_2__0)*
	{ after(grammarAccess.getAttributesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAttributesAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attributes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group_2__0__Impl
	rule__Attributes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getAttributesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttributeAssignment_2_1()); }
	(rule__Attributes__AttributeAssignment_2_1)
	{ after(grammarAccess.getAttributesAccess().getAttributeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributesDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributesDefinition__Group__0__Impl
	rule__AttributesDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributesDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesDefinitionAccess().getNameAssignment_0()); }
	(rule__AttributesDefinition__NameAssignment_0)
	{ after(grammarAccess.getAttributesDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributesDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributesDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributesDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesDefinitionAccess().getTypeAssignment_1()); }
	(rule__AttributesDefinition__TypeAssignment_1)
	{ after(grammarAccess.getAttributesDefinitionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleParts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__0__Impl
	rule__RuleParts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getNameRuleAssignment_0()); }
	(rule__RuleParts__NameRuleAssignment_0)
	{ after(grammarAccess.getRulePartsAccess().getNameRuleAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__1__Impl
	rule__RuleParts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getInsertAssignment_1()); }
	(rule__RuleParts__InsertAssignment_1)
	{ after(grammarAccess.getRulePartsAccess().getInsertAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__2__Impl
	rule__RuleParts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getPriorityAssignment_2()); }
	(rule__RuleParts__PriorityAssignment_2)?
	{ after(grammarAccess.getRulePartsAccess().getPriorityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__3__Impl
	rule__RuleParts__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getSelectRuleAssignment_3()); }
	(rule__RuleParts__SelectRuleAssignment_3)
	{ after(grammarAccess.getRulePartsAccess().getSelectRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__4__Impl
	rule__RuleParts__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getFromRuleAssignment_4()); }
	(rule__RuleParts__FromRuleAssignment_4)
	{ after(grammarAccess.getRulePartsAccess().getFromRuleAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__5__Impl
	rule__RuleParts__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getGroupByAssignment_5()); }
	(rule__RuleParts__GroupByAssignment_5)?
	{ after(grammarAccess.getRulePartsAccess().getGroupByAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__6__Impl
	rule__RuleParts__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getHavingAssignment_6()); }
	(rule__RuleParts__HavingAssignment_6)?
	{ after(grammarAccess.getRulePartsAccess().getHavingAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleParts__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRulePartsAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getRulePartsAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
	'insert'
	{ after(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getIntoKeyword_1()); }
	'into'
	{ after(grammarAccess.getInsertAccess().getIntoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getNameAssignment_2()); }
	(rule__Insert__NameAssignment_2)
	{ after(grammarAccess.getInsertAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameKeyword_0()); }
	'@Name'
	{ after(grammarAccess.getNameAccess().getNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getNameAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__2__Impl
	rule__Name__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAssignment_2()); }
	(rule__Name__NameAssignment_2)
	{ after(grammarAccess.getNameAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getNameAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Priority__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__0__Impl
	rule__Priority__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getPriorityKeyword_0()); }
	'@Priority'
	{ after(grammarAccess.getPriorityAccess().getPriorityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__1__Impl
	rule__Priority__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPriorityAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__2__Impl
	rule__Priority__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getPriorityIntAssignment_2()); }
	(rule__Priority__PriorityIntAssignment_2)
	{ after(grammarAccess.getPriorityAccess().getPriorityIntAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPriorityAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0__0__Impl
	rule__Select__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_0_0()); }
	'select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0__1__Impl
	rule__Select__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectAccess().getGroup_0_1()); }
		(rule__Select__Group_0_1__0)
		{ after(grammarAccess.getSelectAccess().getGroup_0_1()); }
	)
	(
		{ before(grammarAccess.getSelectAccess().getGroup_0_1()); }
		(rule__Select__Group_0_1__0)*
		{ after(grammarAccess.getSelectAccess().getGroup_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_0_2()); }
	(rule__Select__Group_0_2__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_1__0__Impl
	rule__Select__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectAttributesAssignment_0_1_0()); }
	(rule__Select__SelectAttributesAssignment_0_1_0)
	{ after(grammarAccess.getSelectAccess().getSelectAttributesAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_0_1_1()); }
	(rule__Select__Group_0_1_1__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_1_1__0__Impl
	rule__Select__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAsKeyword_0_1_1_0()); }
	'as'
	{ after(grammarAccess.getSelectAccess().getAsKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAliasAssignment_0_1_1_1()); }
	(rule__Select__AliasAssignment_0_1_1_1)
	{ after(grammarAccess.getSelectAccess().getAliasAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_2__0__Impl
	rule__Select__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_0_2_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_2__1__Impl
	rule__Select__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectAttributesAssignment_0_2_1()); }
	(rule__Select__SelectAttributesAssignment_0_2_1)
	{ after(grammarAccess.getSelectAccess().getSelectAttributesAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_0_2_2()); }
	(rule__Select__Group_0_2_2__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_0_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_2_2__0__Impl
	rule__Select__Group_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAsKeyword_0_2_2_0()); }
	'as'
	{ after(grammarAccess.getSelectAccess().getAsKeyword_0_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_0_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getAliasAssignment_0_2_2_1()); }
	(rule__Select__AliasAssignment_0_2_2_1)
	{ after(grammarAccess.getSelectAccess().getAliasAssignment_0_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectAttributesDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectAttributesDefinition__Group__0__Impl
	rule__SelectAttributesDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAttributesDefinitionAccess().getRightSideAssignment_0()); }
	(rule__SelectAttributesDefinition__RightSideAssignment_0)
	{ after(grammarAccess.getSelectAttributesDefinitionAccess().getRightSideAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectAttributesDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAttributesDefinitionAccess().getGroup_1()); }
	(rule__SelectAttributesDefinition__Group_1__0)*
	{ after(grammarAccess.getSelectAttributesDefinitionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectAttributesDefinition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectAttributesDefinition__Group_1__0__Impl
	rule__SelectAttributesDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAttributesDefinitionAccess().getOperatorAssignment_1_0()); }
	(rule__SelectAttributesDefinition__OperatorAssignment_1_0)
	{ after(grammarAccess.getSelectAttributesDefinitionAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectAttributesDefinition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAttributesDefinitionAccess().getLeftSideAssignment_1_1()); }
	(rule__SelectAttributesDefinition__LeftSideAssignment_1_1)
	{ after(grammarAccess.getSelectAttributesDefinitionAccess().getLeftSideAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSelectDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleSelectDefinition__Group__0__Impl
	rule__SingleSelectDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleSelectDefinitionAccess().getEventAssignment_0()); }
	(rule__SingleSelectDefinition__EventAssignment_0)
	{ after(grammarAccess.getSingleSelectDefinitionAccess().getEventAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleSelectDefinition__Group__1__Impl
	rule__SingleSelectDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleSelectDefinitionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getSingleSelectDefinitionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleSelectDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleSelectDefinitionAccess().getAlternatives_2()); }
	(rule__SingleSelectDefinition__Alternatives_2)
	{ after(grammarAccess.getSingleSelectDefinitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__0__Impl
	rule__From__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getFromKeyword_0()); }
	'from'
	{ after(grammarAccess.getFromAccess().getFromKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getAlternatives_1()); }
	(rule__From__Alternatives_1)
	{ after(grammarAccess.getFromAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0__0__Impl
	rule__From__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getEventAssignment_1_0_0()); }
	(rule__From__EventAssignment_1_0_0)
	{ after(grammarAccess.getFromAccess().getEventAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getAlternatives_1_0_1()); }
	(rule__From__Alternatives_1_0_1)
	{ after(grammarAccess.getFromAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_1_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0_1_0__0__Impl
	rule__From__Group_1_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getLeftParenthesisKeyword_1_0_1_0_0()); }
	'('
	{ after(grammarAccess.getFromAccess().getLeftParenthesisKeyword_1_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0_1_0__1__Impl
	rule__From__Group_1_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getAnythingAssignment_1_0_1_0_1()); }
	(rule__From__AnythingAssignment_1_0_1_0_1)
	{ after(grammarAccess.getFromAccess().getAnythingAssignment_1_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getRightParenthesisKeyword_1_0_1_0_2()); }
	')'
	{ after(grammarAccess.getFromAccess().getRightParenthesisKeyword_1_0_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group_1_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0_1_1__0__Impl
	rule__From__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getFullStopKeyword_1_0_1_1_0()); }
	'.'
	{ after(grammarAccess.getFromAccess().getFullStopKeyword_1_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__From__Group_1_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group_1_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAccess().getAnythingAssignment_1_0_1_1_1()); }
	(rule__From__AnythingAssignment_1_0_1_1_1)
	{ after(grammarAccess.getFromAccess().getAnythingAssignment_1_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPatternKeyword_0()); }
	'pattern'
	{ after(grammarAccess.getPatternAccess().getPatternKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getPatternAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__2__Impl
	rule__Pattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getJoinFollowByAssignment_2()); }
	(rule__Pattern__JoinFollowByAssignment_2)
	{ after(grammarAccess.getPatternAccess().getJoinFollowByAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__3__Impl
	rule__Pattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getPatternAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_4()); }
	(rule__Pattern__Group_4__0)?
	{ after(grammarAccess.getPatternAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__0__Impl
	rule__Pattern__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getFullStopKeyword_4_0()); }
	'.'
	{ after(grammarAccess.getPatternAccess().getFullStopKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getWinAssignment_4_1()); }
	(rule__Pattern__WinAssignment_4_1)
	{ after(grammarAccess.getPatternAccess().getWinAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinFollowBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinFollowBy__Group__0__Impl
	rule__JoinFollowBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAssignment_0()); }
	(rule__JoinFollowBy__FollowsByJoinListAssignment_0)
	{ after(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinFollowBy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinFollowByAccess().getGroup_1()); }
	(rule__JoinFollowBy__Group_1__0)*
	{ after(grammarAccess.getJoinFollowByAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JoinFollowBy__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinFollowBy__Group_1__0__Impl
	rule__JoinFollowBy__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinFollowByAccess().getOperatorAssignment_1_0()); }
	(rule__JoinFollowBy__OperatorAssignment_1_0)
	{ after(grammarAccess.getJoinFollowByAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JoinFollowBy__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAssignment_1_1()); }
	(rule__JoinFollowBy__FollowsByJoinListAssignment_1_1)
	{ after(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFollowBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFollowBy__Group__0__Impl
	rule__AbstractFollowBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFollowByAccess().getAlternatives_0()); }
	(rule__AbstractFollowBy__Alternatives_0)
	{ after(grammarAccess.getAbstractFollowByAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFollowBy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFollowByAccess().getWherePartAssignment_1()); }
	(rule__AbstractFollowBy__WherePartAssignment_1)?
	{ after(grammarAccess.getAbstractFollowByAccess().getWherePartAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractFollowBy__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFollowBy__Group_0_1__0__Impl
	rule__AbstractFollowBy__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFollowByAccess().getLeftParenthesisKeyword_0_1_0()); }
	'('
	{ after(grammarAccess.getAbstractFollowByAccess().getLeftParenthesisKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFollowBy__Group_0_1__1__Impl
	rule__AbstractFollowBy__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFollowByAccess().getFollowByAssignment_0_1_1()); }
	(rule__AbstractFollowBy__FollowByAssignment_0_1_1)
	{ after(grammarAccess.getAbstractFollowByAccess().getFollowByAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractFollowBy__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractFollowByAccess().getRightParenthesisKeyword_0_1_2()); }
	')'
	{ after(grammarAccess.getAbstractFollowByAccess().getRightParenthesisKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FollowBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowBy__Group__0__Impl
	rule__FollowBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByAccess().getLeftSideAssignment_0()); }
	(rule__FollowBy__LeftSideAssignment_0)
	{ after(grammarAccess.getFollowByAccess().getLeftSideAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowBy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByAccess().getGroup_1()); }
	(rule__FollowBy__Group_1__0)*
	{ after(grammarAccess.getFollowByAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FollowBy__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowBy__Group_1__0__Impl
	rule__FollowBy__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
	('->')
	{ after(grammarAccess.getFollowByAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowBy__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByAccess().getRightSideAssignment_1_1()); }
	(rule__FollowBy__RightSideAssignment_1_1)
	{ after(grammarAccess.getFollowByAccess().getRightSideAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getEveryAssignment_0_0()); }
	(rule__TerminalExpression__EveryAssignment_0_0)
	{ after(grammarAccess.getTerminalExpressionAccess().getEveryAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getEveryExpressionAssignment_0_1()); }
	(rule__TerminalExpression__EveryExpressionAssignment_0_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getEveryExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getParenthesisAssignment_1_0()); }
	(rule__TerminalExpression__ParenthesisAssignment_1_0)
	{ after(grammarAccess.getTerminalExpressionAccess().getParenthesisAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__1__Impl
	rule__TerminalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getBetweenParenthesisAssignment_1_1()); }
	(rule__TerminalExpression__BetweenParenthesisAssignment_1_1)
	{ after(grammarAccess.getTerminalExpressionAccess().getBetweenParenthesisAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group__0__Impl
	rule__SingleDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getGroup_0()); }
	(rule__SingleDefinition__Group_0__0)?
	{ after(grammarAccess.getSingleDefinitionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group__1__Impl
	rule__SingleDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getSimpleEventsAssignment_1()); }
	(rule__SingleDefinition__SimpleEventsAssignment_1)
	{ after(grammarAccess.getSingleDefinitionAccess().getSimpleEventsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getGroup_2()); }
	(rule__SingleDefinition__Group_2__0)?
	{ after(grammarAccess.getSingleDefinitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDefinition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group_0__0__Impl
	rule__SingleDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getNameAssignment_0_0()); }
	(rule__SingleDefinition__NameAssignment_0_0)
	{ after(grammarAccess.getSingleDefinitionAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getSingleDefinitionAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDefinition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group_2__0__Impl
	rule__SingleDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
	('(')
	{ after(grammarAccess.getSingleDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group_2__1__Impl
	rule__SingleDefinition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getAnythingAssignment_2_1()); }
	(rule__SingleDefinition__AnythingAssignment_2_1)
	{ after(grammarAccess.getSingleDefinitionAccess().getAnythingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleDefinition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleDefinitionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getSingleDefinitionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Win__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Win__Group__0__Impl
	rule__Win__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Win__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWinAccess().getWinKeyword_0()); }
	'win'
	{ after(grammarAccess.getWinAccess().getWinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Win__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Win__Group__1__Impl
	rule__Win__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Win__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWinAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getWinAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Win__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Win__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Win__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWinAccess().getDefaultMethodAssignment_2()); }
	(rule__Win__DefaultMethodAssignment_2)
	{ after(grammarAccess.getWinAccess().getDefaultMethodAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FollowByWhere__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowByWhere__Group_0__0__Impl
	rule__FollowByWhere__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByWhereAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getFollowByWhereAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowByWhere__Group_0__1__Impl
	rule__FollowByWhere__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByWhereAccess().getFollowByWhereParserRuleCall_0_1()); }
	ruleFollowByWhere
	{ after(grammarAccess.getFollowByWhereAccess().getFollowByWhereParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowByWhere__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByWhereAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getFollowByWhereAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FollowByWhere__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowByWhere__Group_1__0__Impl
	rule__FollowByWhere__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByWhereAccess().getWhereKeyword_1_0()); }
	'where'
	{ after(grammarAccess.getFollowByWhereAccess().getWhereKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowByWhere__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowByWhereAccess().getTimerAssignment_1_1()); }
	(rule__FollowByWhere__TimerAssignment_1_1)
	{ after(grammarAccess.getFollowByWhereAccess().getTimerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__0__Impl
	rule__Timer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getTimerKeyword_0()); }
	'timer'
	{ after(grammarAccess.getTimerAccess().getTimerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__1__Impl
	rule__Timer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTimerAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timer__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimerAccess().getDefaultMethodAssignment_2()); }
	(rule__Timer__DefaultMethodAssignment_2)
	{ after(grammarAccess.getTimerAccess().getDefaultMethodAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__0__Impl
	rule__GroupBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getGroupKeyword_0()); }
	'group'
	{ after(grammarAccess.getGroupByAccess().getGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__1__Impl
	rule__GroupBy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getByKeyword_1()); }
	'by'
	{ after(grammarAccess.getGroupByAccess().getByKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getAnythingAssignment_2()); }
	(rule__GroupBy__AnythingAssignment_2)
	{ after(grammarAccess.getGroupByAccess().getAnythingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Having__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Having__Group__0__Impl
	rule__Having__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHavingAccess().getHavingKeyword_0()); }
	'having'
	{ after(grammarAccess.getHavingAccess().getHavingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Having__Group__1__Impl
	rule__Having__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHavingAccess().getDefaultMethodAssignment_1()); }
	(rule__Having__DefaultMethodAssignment_1)
	{ after(grammarAccess.getHavingAccess().getDefaultMethodAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Having__Group__2__Impl
	rule__Having__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHavingAccess().getOperatorAssignment_2()); }
	(rule__Having__OperatorAssignment_2)
	{ after(grammarAccess.getHavingAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Having__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHavingAccess().getAnythingAssignment_3()); }
	(rule__Having__AnythingAssignment_3)
	{ after(grammarAccess.getHavingAccess().getAnythingAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultMethods__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultMethods__Group__0__Impl
	rule__DefaultMethods__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultMethodsAccess().getNameAssignment_0()); }
	(rule__DefaultMethods__NameAssignment_0)
	{ after(grammarAccess.getDefaultMethodsAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultMethods__Group__1__Impl
	rule__DefaultMethods__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultMethodsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDefaultMethodsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultMethods__Group__2__Impl
	rule__DefaultMethods__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultMethodsAccess().getAnythingAssignment_2()); }
	(rule__DefaultMethods__AnythingAssignment_2)
	{ after(grammarAccess.getDefaultMethodsAccess().getAnythingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultMethods__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultMethodsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDefaultMethodsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Anything__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anything__Group__0__Impl
	rule__Anything__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnythingAccess().getAnythingAction_0()); }
	()
	{ after(grammarAccess.getAnythingAccess().getAnythingAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anything__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnythingAccess().getGroup_1()); }
	(rule__Anything__Group_1__0)*
	{ after(grammarAccess.getAnythingAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Anything__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anything__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnythingAccess().getAlternatives_1_0()); }
	(rule__Anything__Alternatives_1_0)
	{ after(grammarAccess.getAnythingAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtraParenthesisRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtraParenthesisRule__Group__0__Impl
	rule__ExtraParenthesisRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtraParenthesisRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtraParenthesisRuleAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExtraParenthesisRuleAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtraParenthesisRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtraParenthesisRule__Group__1__Impl
	rule__ExtraParenthesisRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtraParenthesisRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtraParenthesisRuleAccess().getAnythingParserRuleCall_1()); }
	ruleAnything
	{ after(grammarAccess.getExtraParenthesisRuleAccess().getAnythingParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtraParenthesisRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtraParenthesisRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtraParenthesisRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtraParenthesisRuleAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getExtraParenthesisRuleAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__RulesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getRulesRulePartsParserRuleCall_0_0()); }
		ruleRuleParts
		{ after(grammarAccess.getDomainmodelAccess().getRulesRulePartsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domainmodel__EventsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getEventsEventParserRuleCall_1_0()); }
		ruleEvent
		{ after(grammarAccess.getDomainmodelAccess().getEventsEventParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__EventattributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getEventattributesAttributesParserRuleCall_3_0()); }
		ruleAttributes
		{ after(grammarAccess.getEventAccess().getEventattributesAttributesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getAttributeAttributesDefinitionParserRuleCall_1_0()); }
		ruleAttributesDefinition
		{ after(grammarAccess.getAttributesAccess().getAttributeAttributesDefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__AttributeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getAttributeAttributesDefinitionParserRuleCall_2_1_0()); }
		ruleAttributesDefinition
		{ after(grammarAccess.getAttributesAccess().getAttributeAttributesDefinitionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributesDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributesDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributesDefinition__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesDefinitionAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributesDefinitionAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__NameRuleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getNameRuleNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getRulePartsAccess().getNameRuleNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__InsertAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getInsertInsertParserRuleCall_1_0()); }
		ruleInsert
		{ after(grammarAccess.getRulePartsAccess().getInsertInsertParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__PriorityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getPriorityPriorityParserRuleCall_2_0()); }
		rulePriority
		{ after(grammarAccess.getRulePartsAccess().getPriorityPriorityParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__SelectRuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getSelectRuleSelectParserRuleCall_3_0()); }
		ruleSelect
		{ after(grammarAccess.getRulePartsAccess().getSelectRuleSelectParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__FromRuleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getFromRuleFromParserRuleCall_4_0()); }
		ruleFrom
		{ after(grammarAccess.getRulePartsAccess().getFromRuleFromParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__GroupByAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getGroupByGroupByParserRuleCall_5_0()); }
		ruleGroupBy
		{ after(grammarAccess.getRulePartsAccess().getGroupByGroupByParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleParts__HavingAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartsAccess().getHavingHavingParserRuleCall_6_0()); }
		ruleHaving
		{ after(grammarAccess.getRulePartsAccess().getHavingHavingParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInsertAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNameAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__PriorityIntAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityAccess().getPriorityIntINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPriorityAccess().getPriorityIntINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectAttributesAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectAttributesSelectAttributesDefinitionParserRuleCall_0_1_0_0()); }
		ruleSelectAttributesDefinition
		{ after(grammarAccess.getSelectAccess().getSelectAttributesSelectAttributesDefinitionParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AliasAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAliasValidIDParserRuleCall_0_1_1_1_0()); }
		ruleValidID
		{ after(grammarAccess.getSelectAccess().getAliasValidIDParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectAttributesAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectAttributesSelectAttributesDefinitionParserRuleCall_0_2_1_0()); }
		ruleSelectAttributesDefinition
		{ after(grammarAccess.getSelectAccess().getSelectAttributesSelectAttributesDefinitionParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AliasAssignment_0_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAliasValidIDParserRuleCall_0_2_2_1_0()); }
		ruleValidID
		{ after(grammarAccess.getSelectAccess().getAliasValidIDParserRuleCall_0_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__AsteriskAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getAsteriskAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getAsteriskAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getSelectAccess().getAsteriskAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getSelectAccess().getAsteriskAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KindSelectAttributesDefinition__SingleSelectDefinitionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getSingleSelectDefinitionSingleSelectDefinitionParserRuleCall_0_0()); }
		ruleSingleSelectDefinition
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getSingleSelectDefinitionSingleSelectDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KindSelectAttributesDefinition__DefaultMethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getDefaultMethodDefaultMethodsParserRuleCall_1_0()); }
		ruleDefaultMethods
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getDefaultMethodDefaultMethodsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KindSelectAttributesDefinition__IntAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getIntINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getIntINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KindSelectAttributesDefinition__StringAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKindSelectAttributesDefinitionAccess().getStringSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getKindSelectAttributesDefinitionAccess().getStringSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__RightSideAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAttributesDefinitionAccess().getRightSideKindSelectAttributesDefinitionParserRuleCall_0_0()); }
		ruleKindSelectAttributesDefinition
		{ after(grammarAccess.getSelectAttributesDefinitionAccess().getRightSideKindSelectAttributesDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAttributesDefinitionAccess().getOperatorOperatorsEnumRuleCall_1_0_0()); }
		ruleOperators
		{ after(grammarAccess.getSelectAttributesDefinitionAccess().getOperatorOperatorsEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectAttributesDefinition__LeftSideAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAttributesDefinitionAccess().getLeftSideKindSelectAttributesDefinitionParserRuleCall_1_1_0()); }
		ruleKindSelectAttributesDefinition
		{ after(grammarAccess.getSelectAttributesDefinitionAccess().getLeftSideKindSelectAttributesDefinitionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__EventAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSelectDefinitionAccess().getEventSingleDefinitionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSingleSelectDefinitionAccess().getEventSingleDefinitionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSingleSelectDefinitionAccess().getEventSingleDefinitionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSingleSelectDefinitionAccess().getEventSingleDefinitionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSelectDefinition__AttributeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleSelectDefinitionAccess().getAttributeIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSingleSelectDefinitionAccess().getAttributeIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__EventAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getEventEventCrossReference_1_0_0_0()); }
		(
			{ before(grammarAccess.getFromAccess().getEventEventIDTerminalRuleCall_1_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFromAccess().getEventEventIDTerminalRuleCall_1_0_0_0_1()); }
		)
		{ after(grammarAccess.getFromAccess().getEventEventCrossReference_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__AnythingAssignment_1_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getAnythingAnythingParserRuleCall_1_0_1_0_1_0()); }
		ruleAnything
		{ after(grammarAccess.getFromAccess().getAnythingAnythingParserRuleCall_1_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__AnythingAssignment_1_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getAnythingAnythingParserRuleCall_1_0_1_1_1_0()); }
		ruleAnything
		{ after(grammarAccess.getFromAccess().getAnythingAnythingParserRuleCall_1_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__From__PatternAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAccess().getPatternPatternParserRuleCall_1_1_0()); }
		rulePattern
		{ after(grammarAccess.getFromAccess().getPatternPatternParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__JoinFollowByAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getJoinFollowByJoinFollowByParserRuleCall_2_0()); }
		ruleJoinFollowBy
		{ after(grammarAccess.getPatternAccess().getJoinFollowByJoinFollowByParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__WinAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getWinWinParserRuleCall_4_1_0()); }
		ruleWin
		{ after(grammarAccess.getPatternAccess().getWinWinParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__FollowsByJoinListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAbstractFollowByParserRuleCall_0_0()); }
		ruleAbstractFollowBy
		{ after(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAbstractFollowByParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinFollowByAccess().getOperatorOperatorsEnumRuleCall_1_0_0()); }
		ruleOperators
		{ after(grammarAccess.getJoinFollowByAccess().getOperatorOperatorsEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinFollowBy__FollowsByJoinListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAbstractFollowByParserRuleCall_1_1_0()); }
		ruleAbstractFollowBy
		{ after(grammarAccess.getJoinFollowByAccess().getFollowsByJoinListAbstractFollowByParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__FollowByAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFollowByAccess().getFollowByFollowByParserRuleCall_0_0_0()); }
		ruleFollowBy
		{ after(grammarAccess.getAbstractFollowByAccess().getFollowByFollowByParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__FollowByAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFollowByAccess().getFollowByFollowByParserRuleCall_0_1_1_0()); }
		ruleFollowBy
		{ after(grammarAccess.getAbstractFollowByAccess().getFollowByFollowByParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFollowBy__WherePartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFollowByAccess().getWherePartFollowByWhereParserRuleCall_1_0()); }
		ruleFollowByWhere
		{ after(grammarAccess.getAbstractFollowByAccess().getWherePartFollowByWhereParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__LeftSideAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFollowByAccess().getLeftSideTerminalExpressionParserRuleCall_0_0()); }
		ruleTerminalExpression
		{ after(grammarAccess.getFollowByAccess().getLeftSideTerminalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowBy__RightSideAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFollowByAccess().getRightSideTerminalExpressionParserRuleCall_1_1_0()); }
		ruleTerminalExpression
		{ after(grammarAccess.getFollowByAccess().getRightSideTerminalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__EveryAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getEveryEveryKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getTerminalExpressionAccess().getEveryEveryKeyword_0_0_0()); }
			'every'
			{ after(grammarAccess.getTerminalExpressionAccess().getEveryEveryKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getTerminalExpressionAccess().getEveryEveryKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__EveryExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getEveryExpressionFollowByParserRuleCall_0_1_0()); }
		ruleFollowBy
		{ after(grammarAccess.getTerminalExpressionAccess().getEveryExpressionFollowByParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ParenthesisAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getParenthesisLeftParenthesisKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getTerminalExpressionAccess().getParenthesisLeftParenthesisKeyword_1_0_0()); }
			'('
			{ after(grammarAccess.getTerminalExpressionAccess().getParenthesisLeftParenthesisKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getTerminalExpressionAccess().getParenthesisLeftParenthesisKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BetweenParenthesisAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getBetweenParenthesisFollowByParserRuleCall_1_1_0()); }
		ruleFollowBy
		{ after(grammarAccess.getTerminalExpressionAccess().getBetweenParenthesisFollowByParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__SingleDefinitionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpressionAccess().getSingleDefinitionSingleDefinitionParserRuleCall_2_0()); }
		ruleSingleDefinition
		{ after(grammarAccess.getTerminalExpressionAccess().getSingleDefinitionSingleDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleDefinitionAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSingleDefinitionAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__SimpleEventsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleDefinitionAccess().getSimpleEventsKindOfEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSingleDefinitionAccess().getSimpleEventsKindOfEventIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSingleDefinitionAccess().getSimpleEventsKindOfEventIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSingleDefinitionAccess().getSimpleEventsKindOfEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDefinition__AnythingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleDefinitionAccess().getAnythingAnythingParserRuleCall_2_1_0()); }
		ruleAnything
		{ after(grammarAccess.getSingleDefinitionAccess().getAnythingAnythingParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Win__DefaultMethodAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWinAccess().getDefaultMethodDefaultMethodsParserRuleCall_2_0()); }
		ruleDefaultMethods
		{ after(grammarAccess.getWinAccess().getDefaultMethodDefaultMethodsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowByWhere__TimerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFollowByWhereAccess().getTimerTimerParserRuleCall_1_1_0()); }
		ruleTimer
		{ after(grammarAccess.getFollowByWhereAccess().getTimerTimerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timer__DefaultMethodAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimerAccess().getDefaultMethodDefaultMethodsParserRuleCall_2_0()); }
		ruleDefaultMethods
		{ after(grammarAccess.getTimerAccess().getDefaultMethodDefaultMethodsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__AnythingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByAccess().getAnythingAnythingParserRuleCall_2_0()); }
		ruleAnything
		{ after(grammarAccess.getGroupByAccess().getAnythingAnythingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__DefaultMethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHavingAccess().getDefaultMethodDefaultMethodsParserRuleCall_1_0()); }
		ruleDefaultMethods
		{ after(grammarAccess.getHavingAccess().getDefaultMethodDefaultMethodsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHavingAccess().getOperatorOperatorsEnumRuleCall_2_0()); }
		ruleOperators
		{ after(grammarAccess.getHavingAccess().getOperatorOperatorsEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Having__AnythingAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHavingAccess().getAnythingAnythingParserRuleCall_3_0()); }
		ruleAnything
		{ after(grammarAccess.getHavingAccess().getAnythingAnythingParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultMethodsAccess().getNameNameMethodParserRuleCall_0_0()); }
		ruleNameMethod
		{ after(grammarAccess.getDefaultMethodsAccess().getNameNameMethodParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultMethods__AnythingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultMethodsAccess().getAnythingAnythingParserRuleCall_2_0()); }
		ruleAnything
		{ after(grammarAccess.getDefaultMethodsAccess().getAnythingAnythingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__OperatorAssignment_1_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnythingAccess().getOperatorOperatorsEnumRuleCall_1_0_4_0()); }
		ruleOperators
		{ after(grammarAccess.getAnythingAccess().getOperatorOperatorsEnumRuleCall_1_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anything__ExtraParenthesisAssignment_1_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnythingAccess().getExtraParenthesisExtraParenthesisRuleParserRuleCall_1_0_5_0()); }
		ruleExtraParenthesisRule
		{ after(grammarAccess.getAnythingAccess().getExtraParenthesisExtraParenthesisRuleParserRuleCall_1_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
